import * as Canvas from "./Canvas";

interface IImageBounds
{
    x: number;
    y: number;
    w: number;
    h: number;
}

interface IMetaData
{
    frames: any;
}

/**
 * A spritesheet that uses files generated by Texture Packer.
 * Use the JSON (hash) format
 */
export class TexturePackerSpriteSheet
{
    private spriteSheet: Canvas.SpriteSheet;

    /**
     * @param image The spritesheet image
     * @param metadata The spritesheet metadata (image offsets)
     */
    constructor(image: HTMLImageElement, private metadata: IMetaData)
    {
        this.spriteSheet = new Canvas.SpriteSheet(image);
    }
    
    private getImageBounds(name: string): IImageBounds
    {
        return this.metadata.frames[name].frame;
    }

    public getImage(name: string): Canvas.SpriteSheetImage
    {
        let b = this.getImageBounds(name);
        return this.spriteSheet.getImage(b.x, b.y, b.w, b.h);
    }

    public getAnimationFrames(name: string, frameW: number, frameH: number, rows?: number, cols?: number): Canvas.ImageAnimationFrames
    {
        let b = this.getImageBounds(name);
        return this.spriteSheet.getAnimationFrames(frameW, frameH, rows, cols, b.x, b.y);
    }
}